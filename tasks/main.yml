---

- name: Update apt cache
  apt: update_cache=yes
  become: yes

- name: Install dependencies for docker-debian
  apt:
    name: [ 'aptitude', 'apt-transport-https', 'ca-certificates', 'gnupg2', 'software-properties-common' ]
    state: latest
  become: yes

- name: Pip Install dependencies for docker-debian
  pip:
    name: [ 'docker', 'PyYAML' ]
    executable: pip3
    state: present

- name: Pip Install docker-compose dependencies for docker-debian
  pip:
    name: [ 'docker-compose' ]
    executable: pip3
    state: present
  when: install_compose

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
  become: yes

- name: Add Docker APT repository
  vars:
    distro: "{{ 'stretch' if ansible_distribution_release == 'sid' else ansible_distribution_release }}"
  apt_repository:
    filename: "docker-ce"
    repo: deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ distro }} stable
  become: yes

- name: Install Docker
  apt:
    name: [ 'docker-ce', 'docker-ce-cli', 'containerd.io' ]
  become: yes

- name: Install Docker Compose
  apt:
    name: [ 'docker-compose' ]
    state: present
  when: install_compose

- name: Create docker systemd service directory
  file:
    path: "/etc/systemd/system/docker.service.d"
    owner: root
    group: root
    mode: 0755
    state: directory
  become: yes

- name: Create /etc/docker/daemon.json
  template:
    dest: "/etc/docker/daemon.json"
    src: daemon.json.j2
    owner: root
    group: root
    mode: 0644
  become: yes
  notify: Reload docker systemd service

- name: Create systemd override for the docker service
  template:
    dest: "/etc/systemd/system/docker.service.d/override.conf"
    src: docker-override.conf.j2
    owner: root
    group: root
    mode: 0644
  become: yes
  notify: Reload docker systemd service
  when: not iptables

- name: Start Docker if it is not running
  systemd:
    name: docker
    state: started
  become: yes
